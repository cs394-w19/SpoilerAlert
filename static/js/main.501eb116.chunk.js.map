{"version":3,"sources":["serviceWorker.js","Components/FridgeItem.js","Components/AddFridgeItem.js","Components/FridgeList.js","Components/ShoppingItem.js","Components/AddShoppingItem.js","Components/ShoppingList.js","Components/Settings.js","Components/Menu.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","FridgeItem","react_default","a","createElement","ListItem_default","ListItemText_default","primary","this","props","item","secondary","date","ListItemSecondaryAction_default","className","React","Component","AddFridgeItem","onClick","closePopup","FridgeList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","showAddItem","setState","productList","entries","apples","milk","eggs","map","_ref","_ref2","slicedToArray","product","FridgeItem_FridgeItem","togglePopup","bind","AddFridgeItem_AddFridgeItem","ShoppingItem","AddShoppingItem","ShoppingList","ShoppingItem_ShoppingItem","AddShoppingItem_AddShoppingItem","Settings","Fragment","type","Menu","toggleMenu","changePage","enum","FRIDGE","SHOPPING","SETTINGS","PageEnum","App","showMenu","page","newPage","_this2","current_page","FridgeList_FridgeList","ShoppingList_ShoppingList","Settings_Settings","Menu_Menu","i","ReactDOM","render","href","rel","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.501eb116.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\n//item name, days until expiration\r\n\r\nexport default class FridgeItem extends React.Component{\r\n\trender() {\r\n        return(\r\n            <ListItem>\r\n                <ListItemText primary={this.props.item} secondary={this.props.date} />\r\n                <ListItemSecondaryAction>\r\n\t\t              <i className=\"material-icons\">\r\n\t\t\t              delete\r\n\t\t              </i>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class AddFridgeItem extends React.Component{\r\n\trender() {\r\n    return (\r\n      <div> Add to list\r\n\t      <button onClick={this.props.closePopup}>Done</button>\r\n      </div>\r\n\r\n\t\t)\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport FridgeItem from './FridgeItem'\r\nimport AddFridgeItem from './AddFridgeItem';\r\n\r\nexport default class FridgeList extends React.Component{\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tshowAddItem: false\r\n\t\t};\r\n\t}\r\n\t\r\n\ttogglePopup() {\r\n\t\tthis.setState({\r\n\t\t\tshowAddItem: !this.state.showAddItem\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst myFood = {\"apples\":\"3 days\", \"milk\":\"7 days\", \"eggs\":\"15 days\"};\r\n\t\tconst productList = Object.entries(myFood).map(([product, date]) => (\r\n\t\t\t<FridgeItem item={product} date={date}></FridgeItem>\r\n\t\t\t)\r\n\t\t);\r\n\r\n    return (\r\n      <div> Fridge List\r\n\t      <i className=\"material-icons\" onClick={this.togglePopup.bind(this)}>\r\n\t\t      add_box\r\n\t      </i>\r\n\t\t\t\t<div >{productList}</div>\r\n\t      {this.state.showAddItem ? \r\n          <AddFridgeItem closePopup={this.togglePopup.bind(this)}/>\r\n          : null\r\n        }\r\n      </div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\nexport default class ShoppingItem extends React.Component{\r\n\trender() {\r\n    return (\r\n            <ListItem>\r\n                <ListItemText primary={this.props.item}/>\r\n                <ListItemSecondaryAction>\r\n\t\t              <i className=\"material-icons\">\r\n\t\t\t              delete\r\n              \t\t</i>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class AddShoppingItem extends React.Component{\r\n  \r\n  render() {\r\n    return (\r\n      <div> Add to list\r\n        <button onClick={this.props.closePopup}>Done</button>\r\n      </div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport ShoppingItem from './ShoppingItem';\r\nimport AddShoppingItem from './AddShoppingItem';\r\n\r\nexport default class ShoppingList extends React.Component{\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tshowAddItem: false\r\n\t\t};\r\n\t}\t\r\n\t\r\n\ttogglePopup() {\r\n\t\tthis.setState({\r\n\t\t\tshowAddItem: !this.state.showAddItem\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst myFood = [\"apples\", \"milk\", \"eggs\"];\r\n\t\tconst productList = myFood.map(product => (\r\n\t\t\t<ShoppingItem item={product}></ShoppingItem>\r\n\t\t\t)\r\n\t\t);\r\n\r\n    return (\r\n\t\t<div> Shopping List \r\n\t\t  <i className=\"material-icons\" onClick={this.togglePopup.bind(this)}>\r\n\t\t      add_box\r\n\t      </i>\t\t\r\n\t      <div>{productList}</div>\r\n\t      <button>Add entire Fridge List</button>\r\n\t      {this.state.showAddItem ? \r\n            <AddShoppingItem closePopup={this.togglePopup.bind(this)} />\r\n\t\t\t: null\r\n\t\t\t}\r\n\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Settings extends React.Component{\r\n\t\r\n\trender() {\r\n\t\treturn (\t\r\n\t\t\t<>\r\n\t\t\t<div>\r\n\t\t\t\t<div> Phone Number: \r\n\t\t\t\t\t<input type=\"text\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div> Notification Settings:\r\n\t\t\t\t</div>\r\n\t\t\t\t<div> SMS Messages \r\n\t\t\t\t\t<input type=\"radio\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div> Email \r\n\t\t\t\t\t<input type=\"radio\" />\r\n\t\t\t\t</div>\r\n \t\t\t</div> \t\t\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n","import React\tfrom 'react';\r\n\r\nexport default class Menu extends React.Component{\r\n\t\r\n\trender() {\r\n    return (\r\n\t\t\t\t<>\r\n        <div> \r\n\t\t\t\t\t<i onClick={() => this.props.toggleMenu()} className=\"material-icons\">\r\n\t\t\t\t\tmenu\r\n\t      \t</i>\r\n        </div>\r\n        {this.props.state ? \r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div><button onClick={() => this.props.changePage(this.props.enum.FRIDGE)}>Fridge List</button></div>\r\n\t  \t    <div><button onClick={() => this.props.changePage(this.props.enum.SHOPPING)}>Shopping List</button></div>\r\n\t\t    \t<div><button onClick={() => this.props.changePage(this.props.enum.SETTINGS)}>Settings</button></div>\r\n\t\t\t\t</div> \t\r\n\t\t\t\t: null\r\n        }\t\r\n\t\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport FridgeList from './Components/FridgeList.js'\r\nimport ShoppingList from './Components/ShoppingList.js'\r\nimport Settings from './Components/Settings.js'\r\nimport Menu from './Components/Menu.js'\r\n\r\nconst PageEnum = {\r\n\tFRIDGE : 1,\r\n\tSHOPPING : 2,\r\n\tSETTINGS : 3,\r\n}\r\n\r\nclass App extends Component {\r\n  toggleMenu() {\r\n\t\tthis.setState({\r\n\t\t\tshowMenu: !this.state.showMenu\r\n\t\t});\r\n\t}\r\n\r\n  changePage(newPage) {\r\n\t\tthis.setState({\r\n\t\t\tpage: newPage\r\n\t\t});\r\n\t\tif (this.state.showMenu)\r\n\t\t  this.toggleMenu();\r\n\t}\r\n\r\n  constructor() {\r\n  \tsuper();\r\n  \tthis.state = {\r\n  \t\tshowMenu : false,\r\n  \t\tpage : PageEnum.FRIDGE\r\n  \t}\r\n  }\r\n\r\n  render() {\r\n  \tlet current_page = null;\r\n\r\n  \tswitch(this.state.page) {\r\n\t\t\tcase PageEnum.FRIDGE:\r\n      \tcurrent_page = <FridgeList/>\r\n      \tbreak;\r\n\r\n\t\t\tcase PageEnum.SHOPPING:\r\n\t\t\t\tcurrent_page = <ShoppingList/>\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase PageEnum.SETTINGS:\r\n\t\t\t\tcurrent_page = <Settings/>\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tcurrent_page = <FridgeList/>\r\n\t\t}\r\n\t\t\r\n    return (\r\n      <div>\r\n        <Menu enum={PageEnum} \r\n              toggleMenu={i => this.toggleMenu(i)} \r\n              changePage={i => this.changePage(i)}\r\n              state={this.state.showMenu}/>\r\n        {current_page}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n<html>\r\n<head>\r\n<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\" />\r\n</head>\r\n<body>\r\n<App/> \r\n</body>\r\n</html>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}