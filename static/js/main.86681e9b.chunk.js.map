{"version":3,"sources":["serviceWorker.js","Components/FridgeItem.js","Components/AddFridgeItem.js","Components/FridgeList.js","Components/ShoppingItem.js","Components/AddShoppingItem.js","Components/ShoppingList.js","Components/Settings.js","Components/Menu.js","Components/NewMenu.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","FridgeItem","date","String","_this","this","react_default","a","createElement","ListItem_default","ListItemText_default","primary","props","item","secondary","prettyDate","ListItemSecondaryAction_default","className","onClick","delFridgeItem","React","Component","AddFridgeItem","add_and_close","name","days","addItem","parseInt","closePopup","_this2","type","id","min","document","getElementById","value","FridgeList","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","items_copy","state","items","setState","item_name","days_til","new_items","added","entries","map","_ref","_ref2","slicedToArray","n","d","showAddItem","data","myFood","productList","_ref3","_ref4","product","FridgeItem_FridgeItem","i","togglePopup","bind","AddFridgeItem_AddFridgeItem","alert","ShoppingItem","IconButton_default","func","DeleteRounded_default","AddShoppingItem","ShoppingList","push","delShopItem","index","indexOf","splice","console","log","ShoppingItem_ShoppingItem","AddShoppingItem_AddShoppingItem","Settings","Fragment","TempDrawer","left","toggleDrawer","side","open","defineProperty","Button_default","Drawer_default","anchor","onClose","changePage","enum","FRIDGE","SHOPPING","SETTINGS","PageEnum","App","showMenu","page","newPage","toggleMenu","current_page","FridgeList_FridgeList","ShoppingList_ShoppingList","Settings_Settings","NewMenu_TempDrawer","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.86681e9b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\n//item name, days until expiration\r\n\r\nexport default class FridgeItem extends React.Component{\r\n    prettyDate(date) {\r\n        if (date === 1)\r\n        {\r\n            return String(date) + \" day\";\r\n        }\r\n        else\r\n        {\r\n            return String(date) + \" days\";\r\n        }\r\n    }\r\n\r\n\trender() {\r\n        return(\r\n            <ListItem>\r\n                <ListItemText primary={this.props.item} secondary={this.prettyDate(this.props.date)} />\r\n                <ListItemSecondaryAction>\r\n\t\t              <i className=\"material-icons\" onClick={() => this.props.delFridgeItem(this.props.item)}>\r\n\t\t\t              delete\r\n\t\t              </i>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class AddFridgeItem extends React.Component{\r\n  add_and_close = (name, days) => {\r\n    if (name !== \"\" && days !== \"\") {\r\n      this.props.addItem(name, parseInt(days, 10));\r\n    }\r\n    this.props.closePopup();\r\n    return\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"popup\">\r\n        <div className=\"popup_inner\"> \r\n          <div className=\"title\">Add to Fridge</div>\r\n          <br />\r\n          <div>Food Name: <input type=\"text\" id=\"food_name\"/></div>\r\n          <br />\r\n          <div>Days Til Expiration:\r\n            <input type=\"number\" min=\"1\" id=\"days_til\"/>\r\n          </div>\r\n          <br />\r\n          <button className=\"popup_button left\" onClick={() => this.add_and_close(document.getElementById('food_name').value, document.getElementById('days_til').value)}>\r\n            Done\r\n            </button>\r\n\t        <button className=\"popup_button right\" onClick={this.props.closePopup}>Cancel</button>\r\n        </div>\r\n      </div>\r\n\r\n\t\t)\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport FridgeItem from './FridgeItem'\r\nimport AddFridgeItem from './AddFridgeItem';\r\nimport data from '../data/fridge.json'\r\n\r\nexport default class FridgeList extends React.Component{\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tshowAddItem: false,\r\n\t\t\titems: data[\"fridge\"]\r\n\t\t};\r\n\t}\r\n\t\r\n\ttogglePopup() {\r\n\t\tthis.setState({\r\n\t\t\tshowAddItem: !this.state.showAddItem\r\n\t\t});\r\n\t}\r\n\r\n\tdelFridgeItem = (item) => {\r\n\t\tlet items_copy = this.state.items;\r\n\t\tdelete items_copy[item];\r\n    \tthis.setState({\r\n    \t\titems: items_copy\r\n    \t});\r\n  \t}\r\n\r\n    addItem = (item_name, days_til) => {\r\n    \tlet new_items = {};\r\n    \tlet added = false;\r\n    \tObject.entries(this.state.items).map(([n, d]) => {\r\n      \t\tif ((!added) && (d > days_til)) {\r\n        \t\tnew_items[item_name] = days_til;\r\n        \t\tadded = true;\r\n      \t\t}\r\n      \t\tnew_items[n] = d;\r\n      \t\treturn null //This is suppress a warning associated with map\r\n    \t});\r\n\r\n      if (!added) {\r\n        new_items[item_name] = days_til;\r\n      }\r\n\r\n    \tthis.setState({\r\n      \t\titems: new_items\r\n      \t});\r\n  \t}\r\n\r\n\trender() {\r\n\t\tconst myFood = this.state.items;\r\n\t\tconst productList = Object.entries(myFood).map(([product, date]) => (\r\n\t    <FridgeItem item={product} date={date} delFridgeItem={i => this.delFridgeItem(i)}></FridgeItem>\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t    return (\r\n\t      <div className=\"center\"> Fridge List\r\n\t\t      <i className=\"material-icons add-button\" onClick={this.togglePopup.bind(this)}>\r\n\t\t\t      add_box\r\n\t\t      </i>\r\n\t\t\t\t\t<div >{productList}</div>\r\n\t\t      {this.state.showAddItem ? \r\n\t          <AddFridgeItem closePopup={this.togglePopup.bind(this)} addItem={this.addItem}/>\r\n\t          : null\r\n\t        }\r\n\t        <button onClick = {() => alert(\"Milk is expired\")}> Check for Expired Items </button>\r\n\t      </div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/DeleteRounded';\r\n\r\nexport default class ShoppingItem extends React.Component{\r\n\trender() {\r\n    return (\r\n            <ListItem>\r\n                <ListItemText primary={this.props.item}/>\r\n                <ListItemSecondaryAction>\r\n                    <IconButton onClick={() => this.props.func(this.props.item)}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class AddShoppingItem extends React.Component{\r\n  \r\n  add_and_close = (name) => {\r\n    if (name !== \"\") {\r\n      this.props.addItem(name);\r\n    }\r\n    this.props.closePopup();\r\n    return\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"popup\">\r\n        <div className=\"popup_inner\">\r\n          <div className=\"title\">Add to Shopping List</div>\r\n          <br />\r\n          <div>Food Name: <input type=\"text\" id=\"food_name\"/></div>\r\n          <br />\r\n          <button className=\"popup_button left\" onClick={() => this.add_and_close(document.getElementById('food_name').value)}>\r\n          Done\r\n          </button>\r\n          <button className=\"popup_button right\" onClick={this.props.closePopup}>\r\n          Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport ShoppingItem from './ShoppingItem';\r\nimport AddShoppingItem from './AddShoppingItem';\r\nimport '../App.scss';\r\nimport data from '../data/shopping.json';\r\n\r\nexport default class ShoppingList extends React.Component{\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tshowAddItem: false,\r\n\t\t\titems: data[\"shopping\"] //array of food\r\n\t\t};\r\n\t}\t\r\n\t\r\n\ttogglePopup() {\r\n\t\tthis.setState({\r\n\t\t\tshowAddItem: !this.state.showAddItem\r\n\t\t});\r\n\t}\r\n\r\n\taddItem = (item_name) => {\r\n\t\tlet items_copy = this.state.items;\r\n\t\titems_copy.push(item_name);\r\n\t\tthis.setState({items: items_copy});\r\n\t  }\r\n\r\n\tdelShopItem = (item) => {\r\n\t\tlet items_copy = this.state.items;\r\n\t\t//console.log(array);\r\n\t\tvar index = items_copy.indexOf(item)\r\n\t\t//console.log(item);\r\n\t\tif (index !== -1) {\r\n\t\t\titems_copy.splice(index, 1);\r\n\t\t\tconsole.log(items_copy);\r\n\t\t\tthis.setState({items: items_copy});\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst myFood = this.state.items;\r\n\t\tconst productList = myFood.map(product => (\r\n\t\t\t<ShoppingItem item={product} func={this.delShopItem}></ShoppingItem>\r\n\t\t\t)\r\n\t\t);\r\n\r\n    return (\r\n\t\t<div className=\"center\"> Shopping List \r\n\t\t  <i className=\"material-icons add-button\" onClick={this.togglePopup.bind(this)}>\r\n\t\t      add_box\r\n\t      </i>\t\t\r\n\t      <div>{productList}</div>\r\n\t      <button className=\"list-modify-button\">Add entire Fridge List</button>\r\n\t      {this.state.showAddItem ? \r\n            <AddShoppingItem closePopup={this.togglePopup.bind(this)} addItem={this.addItem} />\r\n\t\t\t: null\r\n\t\t\t}\r\n\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Settings extends React.Component{\r\n\t\r\n\trender() {\r\n\t\treturn (\t\r\n\t\t\t<>\r\n\t\t\t<div>\r\n\t\t\t\t<div> Phone Number: \r\n\t\t\t\t\t<input type=\"text\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div> Notification Settings:\r\n\t\t\t\t</div>\r\n\t\t\t\t<div> SMS Messages \r\n\t\t\t\t\t<input type=\"radio\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div> Email \r\n\t\t\t\t\t<input type=\"radio\" />\r\n\t\t\t\t</div>\r\n \t\t\t</div> \t\t\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n","import React\tfrom 'react';\r\nimport '../App.scss';\r\n\r\nexport default class Menu extends React.Component{\r\n\t\r\n\trender() {\r\n    return (\r\n\t\t\t\t<>\r\n        <div> \r\n\t\t\t\t\t<i onClick={() => this.props.toggleMenu()} className=\"material-icons\">\r\n\t\t\t\t\tmenu\r\n\t      \t</i>\r\n        </div>\r\n        {this.props.state ? \r\n\t\t\t\t<div className=\"menu\">\r\n\t\t\t\t\t<div><button className=\"menubutton\" onClick={() => this.props.changePage(this.props.enum.FRIDGE)}>Fridge List</button></div>\r\n\t  \t    \t\t<div><button className=\"menubutton\" onClick={() => this.props.changePage(this.props.enum.SHOPPING)}>Shopping List</button></div>\r\n\t\t    \t\t<div><button className=\"menubutton\" onClick={() => this.props.changePage(this.props.enum.SETTINGS)}>Settings</button></div>\r\n\t\t\t\t</div> \t\r\n\t\t\t\t: null\r\n        }\t\r\n\t\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nexport default class TempDrawer extends React.Component {\r\n  state = {\r\n    left: false,\r\n  }\r\n\r\n  toggleDrawer = (side, open) => () => {\r\n    this.setState({\r\n      [side]: open,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <Button onClick={this.toggleDrawer('left', true)}>Menu</Button>\r\n        <Drawer anchor=\"left\" open={this.state.left} onClose={this.toggleDrawer('left', false)}>\r\n              <div >\r\n                <div><Button className=\"menubutton\" onClick={() => this.props.changePage(this.props.enum.FRIDGE)}>Fridge List</Button></div>\r\n                <div><Button className=\"menubutton\" onClick={() => this.props.changePage(this.props.enum.SHOPPING)}>Shopping List</Button></div>\r\n                <div><Button className=\"menubutton\" onClick={() => this.props.changePage(this.props.enum.SETTINGS)}>Settings</Button></div>\r\n              </div>\r\n            </Drawer>\r\n          </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.scss';\r\nimport FridgeList from './Components/FridgeList.js'\r\nimport ShoppingList from './Components/ShoppingList.js'\r\nimport Settings from './Components/Settings.js'\r\nimport Menu from './Components/Menu.js'\r\nimport NewMenu from './Components/NewMenu.js';\r\nimport Drawer from '@material-ui/core/Drawer';\r\n\r\nconst PageEnum = {\r\n\tFRIDGE : 1,\r\n\tSHOPPING : 2,\r\n\tSETTINGS : 3,\r\n}\r\n\r\nclass App extends Component {\r\n\ttoggleMenu() {\r\n\t\tthis.setState({\r\n\t\t\tshowMenu: !this.state.showMenu\r\n\t\t});\r\n\t}\r\n\r\n\tchangePage(newPage) {\r\n\t\tthis.setState({\r\n\t\t\tpage: newPage\r\n\t\t});\r\n\t\tif (this.state.showMenu)\r\n\t\t\tthis.toggleMenu();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tshowMenu : false,\r\n\t\t\tpage : PageEnum.FRIDGE\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet current_page = null;\r\n\r\n\t\tswitch(this.state.page) {\r\n\t\t\tcase PageEnum.FRIDGE:\r\n\t\t\t\t\t\tcurrent_page = <FridgeList/>\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\tcase PageEnum.SHOPPING:\r\n\t\t\t\tcurrent_page = <ShoppingList/>\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase PageEnum.SETTINGS:\r\n\t\t\t\tcurrent_page = <Settings/>\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tcurrent_page = <FridgeList/>\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"app\">\r\n\t\t\t\t<NewMenu className=\"menu\" enum={PageEnum} \r\n\t\t\t\t\t\t\ttoggleMenu={i => this.toggleMenu(i)} \r\n\t\t\t\t\t\t\tchangePage={i => this.changePage(i)}\r\n\t\t\t\t\t\t\tstate={this.state.showMenu}></NewMenu>\r\n\t\t\t\t{current_page}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n\r\n<App/> ,document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}