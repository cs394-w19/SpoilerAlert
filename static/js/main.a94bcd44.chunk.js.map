{"version":3,"sources":["serviceWorker.js","Components/FridgeItem.js","Components/AddFridgeItem.js","Components/FridgeList.js","Components/ShoppingItem.js","Components/AddShoppingItem.js","Components/ShoppingList.js","Components/Settings.js","Components/Menu.js","Components/NewMenu.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","FridgeItem","date","String","_this","this","react_default","a","createElement","ListItem_default","ListItemText_default","primary","props","item","secondary","prettyDate","ListItemSecondaryAction_default","className","onClick","delFridgeItem","React","Component","AddFridgeItem","add_and_close","name","days","addItem","parseInt","closePopup","_this2","type","id","min","document","getElementById","value","FridgeList","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","items_copy","state","items","setState","item_name","days_til","new_items","added","entries","map","_ref","_ref2","slicedToArray","n","d","showAddItem","data","myFood","productList","_ref3","_ref4","product","FridgeItem_FridgeItem","i","togglePopup","bind","AddFridgeItem_AddFridgeItem","alert","ShoppingItem","IconButton_default","func","DeleteRounded_default","AddShoppingItem","ShoppingList","push","delShopItem","index","indexOf","splice","console","log","ShoppingItem_ShoppingItem","AddShoppingItem_AddShoppingItem","Settings","Fragment","TempDrawer","left","toggleDrawer","side","open","defineProperty","Button_default","Drawer_default","anchor","onClose","changePage","enum","FRIDGE","SHOPPING","SETTINGS","PageEnum","App","showMenu","page","newPage","toggleMenu","current_page","FridgeList_FridgeList","ShoppingList_ShoppingList","Settings_Settings","NewMenu_TempDrawer","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a94bcd44.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\n//item name, days until expiration\n\nexport default class FridgeItem extends React.Component{\n    prettyDate(date) {\n        if (date === 1)\n        {\n            return String(date) + \" day\";\n        }\n        else\n        {\n            return String(date) + \" days\";\n        }\n    }\n\n\trender() {\n        return(\n            <ListItem>\n                <ListItemText primary={this.props.item} secondary={this.prettyDate(this.props.date)} />\n                <ListItemSecondaryAction>\n\t\t              <i className=\"material-icons\" onClick={() => this.props.delFridgeItem(this.props.item)}>\n\t\t\t              delete\n\t\t              </i>\n                </ListItemSecondaryAction>\n            </ListItem>\n\n        )\n    }\n}\n","import React from 'react';\n\nexport default class AddFridgeItem extends React.Component{\n  add_and_close = (name, days) => {\n    if (name !== \"\" && days !== \"\") {\n      this.props.addItem(name, parseInt(days, 10));\n    }\n    this.props.closePopup();\n    return\n  }\n\n  render() {\n    return (\n      <div className=\"popup\">\n        <div className=\"popup_inner\"> \n          <div className=\"title\">Add to Fridge</div>\n          <br />\n          <div>Food Name: <input type=\"text\" id=\"food_name\"/></div>\n          <br />\n          <div>Days Til Expiration:\n            <input type=\"number\" min=\"1\" id=\"days_til\"/>\n          </div>\n          <br />\n          <button className=\"popup_button left\" onClick={() => this.add_and_close(document.getElementById('food_name').value, document.getElementById('days_til').value)}>\n            Done\n            </button>\n\t        <button className=\"popup_button right\" onClick={this.props.closePopup}>Cancel</button>\n        </div>\n      </div>\n\n\t\t)\n\t}\n}\n","import React from 'react';\nimport FridgeItem from './FridgeItem'\nimport AddFridgeItem from './AddFridgeItem';\nimport data from '../data/fridge.json'\n\nexport default class FridgeList extends React.Component{\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tshowAddItem: false,\n\t\t\titems: data[\"fridge\"]\n\t\t};\n\t}\n\t\n\ttogglePopup() {\n\t\tthis.setState({\n\t\t\tshowAddItem: !this.state.showAddItem\n\t\t});\n\t}\n\n\tdelFridgeItem = (item) => {\n\t\tlet items_copy = this.state.items;\n\t\tdelete items_copy[item];\n    \tthis.setState({\n    \t\titems: items_copy\n    \t});\n  \t}\n\n    addItem = (item_name, days_til) => {\n    \tlet new_items = {};\n    \tlet added = false;\n    \tObject.entries(this.state.items).map(([n, d]) => {\n      \t\tif ((!added) && (d > days_til)) {\n        \t\tnew_items[item_name] = days_til;\n        \t\tadded = true;\n      \t\t}\n      \t\tnew_items[n] = d;\n      \t\treturn null //This is suppress a warning associated with map\n    \t});\n\n      if (!added) {\n        new_items[item_name] = days_til;\n      }\n\n    \tthis.setState({\n      \t\titems: new_items\n      \t});\n  \t}\n\n\trender() {\n\t\tconst myFood = this.state.items;\n\t\tconst productList = Object.entries(myFood).map(([product, date]) => (\n\t    <FridgeItem item={product} date={date} delFridgeItem={i => this.delFridgeItem(i)}></FridgeItem>\n\t\t\t)\n\t\t);\n\n\t    return (\n\t      <div className=\"center\"> Fridge List\n\t\t      <i className=\"material-icons add-button\" onClick={this.togglePopup.bind(this)}>\n\t\t\t      add_box\n\t\t      </i>\n\t\t\t\t\t<div >{productList}</div>\n\t\t      {this.state.showAddItem ? \n\t          <AddFridgeItem closePopup={this.togglePopup.bind(this)} addItem={this.addItem}/>\n\t          : null\n\t        }\n\t        <button onClick = {() => alert(\"Milk is expired\")}> Check for Expired Items </button>\n\t      </div>\n\t\t)\n\t}\n}\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/DeleteRounded';\n\nexport default class ShoppingItem extends React.Component{\n\trender() {\n    return (\n            <ListItem>\n                <ListItemText primary={this.props.item}/>\n                <ListItemSecondaryAction>\n                    <IconButton onClick={() => this.props.func(this.props.item)}>\n                        <DeleteIcon />\n                    </IconButton>\n                </ListItemSecondaryAction>\n            </ListItem>\n        )\n    }\n}\n","import React from 'react';\n\nexport default class AddShoppingItem extends React.Component{\n  \n  add_and_close = (name) => {\n    if (name !== \"\") {\n      this.props.addItem(name);\n    }\n    this.props.closePopup();\n    return\n  }\n\n  render() {\n    return (\n      <div className=\"popup\">\n        <div className=\"popup_inner\">\n          <div className=\"title\">Add to Shopping List</div>\n          <br />\n          <div>Food Name: <input type=\"text\" id=\"food_name\"/></div>\n          <br />\n          <button className=\"popup_button left\" onClick={() => this.add_and_close(document.getElementById('food_name').value)}>\n          Done\n          </button>\n          <button className=\"popup_button right\" onClick={this.props.closePopup}>\n          Cancel\n          </button>\n        </div>\n      </div>\n\t\t)\n\t}\n}\n","import React from 'react';\nimport ShoppingItem from './ShoppingItem';\nimport AddShoppingItem from './AddShoppingItem';\nimport '../App.css';\nimport data from '../data/shopping.json';\n\nexport default class ShoppingList extends React.Component{\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tshowAddItem: false,\n\t\t\titems: data[\"shopping\"] //array of food\n\t\t};\n\t}\t\n\t\n\ttogglePopup() {\n\t\tthis.setState({\n\t\t\tshowAddItem: !this.state.showAddItem\n\t\t});\n\t}\n\n\taddItem = (item_name) => {\n\t\tlet items_copy = this.state.items;\n\t\titems_copy.push(item_name);\n\t\tthis.setState({items: items_copy});\n\t  }\n\n\tdelShopItem = (item) => {\n\t\tlet items_copy = this.state.items;\n\t\t//console.log(array);\n\t\tvar index = items_copy.indexOf(item)\n\t\t//console.log(item);\n\t\tif (index !== -1) {\n\t\t\titems_copy.splice(index, 1);\n\t\t\tconsole.log(items_copy);\n\t\t\tthis.setState({items: items_copy});\n\t\t}\n\t}\n\n\trender() {\n\t\tconst myFood = this.state.items;\n\t\tconst productList = myFood.map(product => (\n\t\t\t<ShoppingItem item={product} func={this.delShopItem}></ShoppingItem>\n\t\t\t)\n\t\t);\n\n    return (\n\t\t<div className=\"center\"> Shopping List \n\t\t  <i className=\"material-icons add-button\" onClick={this.togglePopup.bind(this)}>\n\t\t      add_box\n\t      </i>\t\t\n\t      <div>{productList}</div>\n\t     \n\t      {this.state.showAddItem ? \n            <AddShoppingItem closePopup={this.togglePopup.bind(this)} addItem={this.addItem} />\n\t\t\t: null\n\t\t\t}\n\t\t</div>\n\t\t)\n\t}\n}\n","import React from 'react';\n\nexport default class Settings extends React.Component{\n\t\n\trender() {\n\t\treturn (\t\n\t\t\t<>\n\t\t\t<div>\n\t\t\t\t<div> Phone Number: \n\t\t\t\t\t<input type=\"text\" />\n\t\t\t\t</div>\n\t\t\t\t<div> Notification Settings:\n\t\t\t\t</div>\n\t\t\t\t<div> SMS Messages \n\t\t\t\t\t<input type=\"radio\" />\n\t\t\t\t</div>\n\t\t\t\t<div> Email \n\t\t\t\t\t<input type=\"radio\" />\n\t\t\t\t</div>\n \t\t\t</div> \t\t\n\t\t\t</>\n\t\t)\n\t}\n}\n","import React\tfrom 'react';\nimport '../App.css';\n\nexport default class Menu extends React.Component{\n\t\n\trender() {\n    return (\n\t\t\t\t<>\n        <div> \n\t\t\t\t\t<i onClick={() => this.props.toggleMenu()} className=\"material-icons\">\n\t\t\t\t\tmenu\n\t      \t</i>\n        </div>\n        {this.props.state ? \n\t\t\t\t<div className=\"menu\">\n\t\t\t\t\t<div><button className=\"menubutton\" onClick={() => this.props.changePage(this.props.enum.FRIDGE)}>Fridge List</button></div>\n\t  \t    \t\t<div><button className=\"menubutton\" onClick={() => this.props.changePage(this.props.enum.SHOPPING)}>Shopping List</button></div>\n\t\t    \t\t<div><button className=\"menubutton\" onClick={() => this.props.changePage(this.props.enum.SETTINGS)}>Settings</button></div>\n\t\t\t\t</div> \t\n\t\t\t\t: null\n        }\t\n\t\t\t\t</>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\n\nexport default class TempDrawer extends React.Component {\n  state = {\n    left: false,\n  }\n\n  toggleDrawer = (side, open) => () => {\n    this.setState({\n      [side]: open,\n    });\n  }\n\n  render() {\n    return(\n      <div>\n        <Button onClick={this.toggleDrawer('left', true)}>Menu</Button>\n        <Drawer anchor=\"left\" open={this.state.left} onClose={this.toggleDrawer('left', false)}>\n              <div >\n                <div><Button className=\"menubutton\" onClick={() => this.props.changePage(this.props.enum.FRIDGE)}>Fridge List</Button></div>\n                <div><Button className=\"menubutton\" onClick={() => this.props.changePage(this.props.enum.SHOPPING)}>Shopping List</Button></div>\n                <div><Button className=\"menubutton\" onClick={() => this.props.changePage(this.props.enum.SETTINGS)}>Settings</Button></div>\n              </div>\n            </Drawer>\n          </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport FridgeList from './Components/FridgeList.js'\nimport ShoppingList from './Components/ShoppingList.js'\nimport Settings from './Components/Settings.js'\nimport Menu from './Components/Menu.js'\nimport NewMenu from './Components/NewMenu.js';\nimport Drawer from '@material-ui/core/Drawer';\n\nconst PageEnum = {\n\tFRIDGE : 1,\n\tSHOPPING : 2,\n\tSETTINGS : 3,\n}\n\nclass App extends Component {\n\ttoggleMenu() {\n\t\tthis.setState({\n\t\t\tshowMenu: !this.state.showMenu\n\t\t});\n\t}\n\n\tchangePage(newPage) {\n\t\tthis.setState({\n\t\t\tpage: newPage\n\t\t});\n\t\tif (this.state.showMenu)\n\t\t\tthis.toggleMenu();\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tshowMenu : false,\n\t\t\tpage : PageEnum.FRIDGE\n\t\t}\n\t}\n\n\trender() {\n\t\tlet current_page = null;\n\n\t\tswitch(this.state.page) {\n\t\t\tcase PageEnum.FRIDGE:\n\t\t\t\t\t\tcurrent_page = <FridgeList/>\n\t\t\t\t\t\tbreak;\n\n\t\t\tcase PageEnum.SHOPPING:\n\t\t\t\tcurrent_page = <ShoppingList/>\n\t\t\t\tbreak;\n\n\t\t\tcase PageEnum.SETTINGS:\n\t\t\t\tcurrent_page = <Settings/>\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tcurrent_page = <FridgeList/>\n\t\t}\n\t\t\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t<NewMenu className=\"menu\" enum={PageEnum} \n\t\t\t\t\t\t\ttoggleMenu={i => this.toggleMenu(i)} \n\t\t\t\t\t\t\tchangePage={i => this.changePage(i)}\n\t\t\t\t\t\t\tstate={this.state.showMenu}></NewMenu>\n\t\t\t\t{current_page}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(\n\n<App/> ,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}